plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    id 'org.tboox.gradle-xmake-plugin' version '1.2.2'
}

android {
    namespace 'org.levimc.launcher'
    compileSdk 35
    defaultConfig {
        applicationId "org.levimc.launcher"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters 'arm64-v8a'
        }
        xmake {
            abiFilters "arm64-v8a"
        }
    }
    signingConfigs {
        release {
            storeFile file(propertyOrDefault('RELEASE_KEYSTORE_FILE', 'keystore.jks'))
            storePassword propertyOrDefault('RELEASE_KEYSTORE_PASSWORD', '')
            keyAlias propertyOrDefault('RELEASE_KEY_ALIAS', '')
            keyPassword propertyOrDefault('RELEASE_KEY_PASSWORD', '')
        }
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    externalNativeBuild {
        xmake{
            path "src/main/jni/xmake.lua"
            logLevel "verbose"
            buildMode "release"

        }
    }
    ndkVersion "27.0.12077973"
}

dependencies {
    implementation libs.appcompat
    implementation libs.constraintlayout
    implementation libs.material
    implementation libs.gson
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}

def propertyOrDefault(String name, String defaultValue) {
    return project.hasProperty(name) ? project.property(name) : defaultValue
}